@using BiermanTech.CanineHealth
@using BiermanTech.CriticalDog.Helpers
@using BiermanTech.CriticalDog.ViewModels
@using BiermanTech.CriticalDog.Services
@inject IEnergyCalculationService EnergyCalculator

@model NutritionSciencePartialViewModel

@{
    // Create input record from view model
    var input = new EnergyCalculationInput
            {
                WeightMetricValue = Model?.WeightRecord?.MetricValue,
                UnitName = Model?.WeightRecord?.MetricType?.Unit?.UnitName,
                LifeStageMetricValue = Model?.LifestageRecord?.MetricValue
            };

    // Call the service
    var result = await EnergyCalculator.CalculateEnergyRequirementsAsync(input);
}

@if (result.IsValid)
{
    <div class="section">
        <h4>Energy Requirements</h4>
        <ul>
            <li>RER @result.Rer.ToString("F2") kcal/day</li>
            <li>MER @result.MeanMer.ToString("F2") kcal/day</li>
        </ul>
        <p>A dog who weighs <strong>@result.WeightInLbs.ToString("F2") lbs.</strong> with a life stage status of <strong>@EnumHelper.GetEnumDisplayName(result.LifeStage)</strong> has a <strong>RER</strong> of <strong>@result.Rer.ToString("F2") kcal</strong> per day and an average <strong>MER</strong> of <strong>@result.MeanMer.ToString("F2") kcal</strong> per day.</p>
    </div>
}

@if (Model?.WeightReport != null)
{
    <div class="section">
        <h4>Weight History Report</h4>
        @await Html.PartialAsync("_AnalyticsChartPartial", new AnalyticsReportPartialViewModel { Report = Model.WeightReport })
        @await Html.PartialAsync("_AnalyticsReportPartial", new AnalyticsReportPartialViewModel { Report = Model.WeightReport })
    </div>
}