@page "{id:int}"
@using BiermanTech.CriticalDog.Helpers
@using BiermanTech.CriticalDog.ViewModels
@model BiermanTech.CriticalDog.Pages.Subjects.DetailsModel

@{
    ViewData["Title"] = "Subject Details";
}

<div class="container">
    <h1>Subject Details</h1>

    <hr />
    <div class="row">
        <div class="col-md-12">
            <dl class="row">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.SubjectVM.Name)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.SubjectVM.Name)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.SubjectVM.Sex)
                </dt>
                <dd class="col-sm-9">
                    @(Model.SubjectVM.Sex == 1 ? "Male" : "Female")
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.SubjectVM.ArrivalDate)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.SubjectVM.ArrivalDate)
                </dd>
                <dt class="col-sm-3">
                    @Model.SubjectVM?.SubjectType?.Clade
                </dt>
                <dd class="col-sm-9">
                    @Model.SubjectVM?.SubjectType?.Name (@Model.SubjectVM?.SubjectType?.ScientificName)
                </dd>
                @if (Model.MetaTagNames.Any())
                {
                    <dt class="col-sm-3">
                        Meta Tags
                    </dt>
                    <dd class="col-sm-9">
                        @await Html.PartialAsync("_TagFieldPartial", Model.MetaTagNames)
                    </dd>
                }

            </dl>
            <div class="form-group mt-3">
                <a asp-page="./Edit" asp-route-id="@Model.SubjectVM.Id" class="btn btn-primary">Edit</a>
                <a asp-page="./Index" class="btn btn-secondary ms-2">Back to List</a>
            </div>
        </div>

        <div class="container mt-4">
            <h1>Recent Observations</h1>

            @if (Model.GroupedRecords?.Any() == true)
            {
                <ul class="nav nav-tabs" id="disciplineTabs" role="tablist">
                    @foreach (var group in Model.GroupedRecords)
                    {
                        var tabId = $"discipline-{group.Key.ToLower().Replace(" ", "-")}-tab";
                        var paneId = $"discipline-{group.Key.ToLower().Replace(" ", "-")}-tab-pane";
                        var isActive = group.Key == Model.GroupedRecords.First().Key;

                        <li class="nav-item" role="presentation">
                            <button class="nav-link @(isActive ? "active" : "")"
                            id="@tabId"
                            data-bs-toggle="tab"
                            data-bs-target="#@paneId"
                            type="button"
                            role="tab"
                            aria-controls="@paneId"
                            aria-selected="@(isActive ? "true" : "false")">
                                @StringHelper.SplitPascalCase(group.Key)
                            </button>
                        </li>
                    }
                </ul>

                <div class="tab-content" id="disciplineTabContent">
                    @foreach (var group in Model.GroupedRecords)
                    {
                        var paneId = $"discipline-{group.Key.ToLower().Replace(" ", "-")}-tab-pane";
                        var tabId = $"discipline-{group.Key.ToLower().Replace(" ", "-")}-tab";
                        var isActive = group.Key == Model.GroupedRecords.First().Key;

                        <div class="tab-pane fade @(isActive ? "show active" : "")"
                        id="@paneId"
                        role="tabpanel"
                        aria-labelledby="@tabId"
                        tabindex="0">
                            <dl class="row">
                                @foreach (var record in group)
                                {
                                    @await Html.PartialAsync("_SubjectRecordPartial", new SubjectRecordPartialViewModel() { RecordVM = record })
                                }
                            </dl>
                        </div>

                        @if (group.Key == "NutritionScience")
                        {
                            <span>Lorem Ipsum</span>
                        }
                    }
                </div>
            }
            else
            {
                <p>No records found for the specified subject.</p>
            }
        </div>
        @if (Model.NutritionPartialViewModel != null && Model.NutritionPartialViewModel.CanHandle())
        {
            <div class="mt-3 col-md-12 overflow-auto">
                @await Html.PartialAsync("_NutritionScienceCardPartial", @Model.NutritionPartialViewModel)
            </div>
        }
    </div>
</div>