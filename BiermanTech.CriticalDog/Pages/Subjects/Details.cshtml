@page "{id:int}"
@using BiermanTech.CriticalDog.Helpers
@using BiermanTech.CriticalDog.ViewModels
@model BiermanTech.CriticalDog.Pages.Subjects.DetailsModel

@{
    ViewData["Title"] = "Subject Details";
}
<style>
    #disciplineTabs .nav-link:not(.active) {
        background-color: #d3d6da;
        border: 1px solid #ced4da;
    }

    #disciplineTabs .nav-link.active {
        background-color: #ffffff;
        border: 1px solid #ced4da;
    }
</style>
<div class="container">
    <h1>Subject Details</h1>
    <hr />

    <ul class="nav nav-tabs" id="disciplineTabs" role="tablist">
        <!-- Statically defined first tab: Lorem Ipsum -->
        <li class="nav-item" role="presentation">
            <button class="nav-link active"
                    id="lorem-ipsum-tab"
                    data-bs-toggle="tab"
                    data-bs-target="#lorem-ipsum-tab-pane"
                    type="button"
                    role="tab"
                    aria-controls="lorem-ipsum-tab-pane"
                    aria-selected="true">
                Details
            </button>
        </li>
        <!-- Dynamically generated tabs for disciplines, if any -->
        @if (Model.GroupedRecords?.Any() == true)
        {
            @foreach (var group in Model.GroupedRecords)
            {
                var tabId = $"discipline-{group.Key.ToLower().Replace(" ", "-")}-tab";
                var paneId = $"discipline-{group.Key.ToLower().Replace(" ", "-")}-tab-pane";

                <li class="nav-item" role="presentation">
                    <button class="nav-link"
                            id="@tabId"
                            data-bs-toggle="tab"
                            data-bs-target="#@paneId"
                            type="button"
                            role="tab"
                            aria-controls="@paneId"
                            aria-selected="false">
                        @StringHelper.SplitPascalCase(group.Key)
                    </button>
                </li>
            }
        }
    </ul>

    <div class="tab-content" id="disciplineTabContent">
        <!-- First tab content: Lorem Ipsum, defined statically -->
        <div class="tab-pane fade show active"
             id="lorem-ipsum-tab-pane"
             role="tabpanel"
             aria-labelledby="lorem-ipsum-tab"
             tabindex="0">
            <dl class="row">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.SubjectVM.Name)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.SubjectVM.Name)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.SubjectVM.Sex)
                </dt>
                <dd class="col-sm-9">
                    @(Model.SubjectVM.Sex == 1 ? "Male" : "Female")
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.SubjectVM.ArrivalDate)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.SubjectVM.ArrivalDate)
                </dd>
                <dt class="col-sm-3">
                    @Model.SubjectVM?.SubjectType?.Clade
                </dt>
                <dd class="col-sm-9">
                    @Model.SubjectVM?.SubjectType?.Name (@Model.SubjectVM?.SubjectType?.ScientificName)
                </dd>
                @if (Model.MetaTagNames.Any())
                {
                    <dt class="col-sm-3">
                        Meta Tags
                    </dt>
                    <dd class="col-sm-9">
                        @await Html.PartialAsync("_TagFieldPartial", Model.MetaTagNames)
                    </dd>
                }

            </dl>
            <div class="form-group mt-3">
                <a asp-page="./Edit" asp-route-id="@Model.SubjectVM.Id" class="btn btn-primary">Edit</a>
                <a asp-page="./Index" class="btn btn-secondary ms-2">Back to List</a>
            </div>
        </div>

        <!-- Remaining tabs: Disciplines, rendered via partial view, if any -->
        @if (Model.GroupedRecords?.Any() == true)
        {
            @foreach (var group in Model.GroupedRecords)
            {
                @await Html.PartialAsync("_DisciplineTabContentPartial", new DisciplineTabContentViewModel
                {
                    SubjectId = Model.Id,
                    DisciplineKey = group.Key,
                    Records = group.ToList()
                })
            }
        }
    </div>
</div>
